"use client";
import { useFormState } from "react-dom";
import toast from "react-hot-toast";
import { Button } from "@/components/ui/button";
import { useEffect, useState } from "react";
import { register } from "@/app/actions/authActions/register";
import Link from "next/link";
import { IoEyeOff,IoEye  } from "react-icons/io5";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { cn } from "@/lib/utils";
import { EyeOff } from "lucide-react";
const SigninComponent = () => {
  const [stateRegister, actionRegister] = useFormState(register, undefined);
  const [valueForUniversity,setValueForUniversity] = useState("")
  const [valueForMajor,setValueForMajor] = useState("")
  const [loginState, setLoginState] = useState<boolean>(true);

    
  useEffect(() => {
   
    if (!loginState && stateRegister?.serverErrorForRegister) {
      toast.error(stateRegister?.serverErrorForRegister);
    }
    if (!loginState && stateRegister?.serverSuccessw) {
      toast.success(stateRegister?.serverSuccessw);
    }
  }, [stateRegister]);

    const [visible,setVisible] = useState(true)
    const [visibleForRegister,setVisibleForRegister] = useState(true)
  return (
    <div className=" w-full h-fit flex flex-row justify-between items-center  bg-[#191919]>">
  

      <div className=" w-full h-screen flex flex-col justify-center items-center  bg-[#191919]   ">
       
   

          <div className=" relative w-[550px] h-full flex flex-col justify-center items-center gap-[30px] p-[30px] bg-[#191919] max-lg:items-center max-lg:bg-[#191919]">
          <h2 className=" w-fit h-fit text-[32px] leading-[38px] text-white ">
              Kayıt Olun
            </h2>
            <form
              action={actionRegister}
              className=" relative w-[550px] h-fit flex flex-col justify-center items-center p-[30px] bg-[#191919] max-lg:items-center max-lg:bg-[#191919]"
            >
              <div className=" relative w-full h-fit flex flex-col justify-center items-start gap-[15px]  ">

                <input
                className={cn( " relative w-full h-[40px] rounded-[10px] p-[12px] bg-[#1c1c1c]  border-gray-400  text-white",    stateRegister?.errors?.password && "border-red-400 border-[1px]  ring-1 ring-red-400")   }

                  type="email"
                  name="email"
                  id="email"
                  placeholder="230******@stu.thk.edu.tr"
                  />

       

                {stateRegister?.errors?.email && (
                  <h2 className=" w-full  ring-[#cd3e2f] rounded-[10px] animate-fade-down animate-ease-in-out animate-normal animate-duration-[400ms] text-red-400  ">
                    {stateRegister.errors.email}
                  </h2>
                )}

                <input
                
                className={cn( " relative w-full h-[40px] rounded-[10px] p-[12px] bg-[#1c1c1c]  border-gray-400  text-white ",    stateRegister?.errors?.password && "border-red-400 border-[1px]  ring-1 ring-red-400")   }
            
            
                  name="name"
                  id="name"
                  placeholder="İsim"
                />
                {stateRegister?.errors?.name && (
                  <h2  className=" w-full  ring-[#cd3e2f] rounded-[10px] animate-fade-down animate-ease-in-out animate-normal animate-duration-[400ms] text-red-400  ">
                    {stateRegister.errors.name}
                  </h2>
                )}
      
                    <Select
                      name="university"
                  onValueChange={(e) => setValueForUniversity(e)}
                  value={valueForUniversity}
                  defaultValue={valueForUniversity}
                >
                    <SelectTrigger id="university" 
                className={cn( " relative w-full h-[40px] rounded-[10px] p-[12px] bg-[#1c1c1c]  border-gray-400 text-white",    stateRegister?.errors?.major && "border-red-400 border-[1px]  ring-1 ring-red-400")   }
                    
                      name="university"
                    >
                      <SelectValue
                        defaultValue={valueForUniversity}
                        placeholder="Üniversite seçiniz"
                      ></SelectValue>
                    </SelectTrigger>
                  <SelectContent>
                    {universitelervebolümleri.universities.map((category,j) => (
                      <SelectItem id={category.name} key={category.id} value={category.name}>
                        {category.name}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
                {stateRegister?.errors?.university && (
                  <h2 className=" w-full text-red-400 text-[12px]  ring-[#cd3e2f] rounded-[10px] animate-fade-down animate-ease-in-out animate-normal animate-duration-[400ms]  ">
                    {stateRegister.errors.university}
                  </h2>
                )}
                    <Select
                      name="major"
                  onValueChange={(e) => setValueForMajor(e)}
                  value={valueForMajor}
                  defaultValue={valueForMajor}
                >
                    <SelectTrigger id="major" 
                className={cn( " relative w-full h-[40px] rounded-[10px] p-[12px] bg-[#1c1c1c]  border-gray-400 text-white",    stateRegister?.errors?.major && "border-red-400 border-[1px]  ring-1 ring-red-400")   }

                    
                      name="major"
                    >
                      <SelectValue
                        defaultValue={valueForMajor}
                        placeholder="Bölüm Seçiniz"
                      ></SelectValue>
                    </SelectTrigger>
                  <SelectContent>
                    {universitelervebolümleri.universities.filter((d) => d.name == valueForUniversity).map((category) => (
                      <>
                      
                        {category.departments.map((z) => <SelectItem id={z.name} key={z.id} value={z.name}>  {z.name}  </SelectItem>)}
                        </>
                   
                    ))}
                  </SelectContent>
                </Select>
                {stateRegister?.errors?.major && (
                  <h2 className=" w-full text-white  ring-[#cd3e2f] rounded-[10px] animate-fade-down animate-ease-in-out animate-normal animate-duration-[400ms]  ">
                    {stateRegister.errors.major}
                  </h2>
                )}
                 <div className="w-full h-full  flex items-center justify-center ">
                 <input
                className={cn( " relative w-full h-[40px] rounded-[10px] p-[12px] bg-[#1c1c1c]  border-gray-400 text-white",    stateRegister?.errors?.password && "border-red-400 border-[1px]  ring-1 ring-red-400")   }

                  
                 
                  type= {visibleForRegister ? "password" : "text"} 
                  name="password"
                  id="password"
                  placeholder="Şifre"
                />
                      {visibleForRegister ? 
                      
                      <IoEyeOff className="transition-all cursor-pointer"  color= "white" size={30} onClick={() => setVisibleForRegister(!visibleForRegister)}/>
                    : 
                    <IoEye className="transition-all cursor-pointer" color= "white"  size={30} onClick={() => setVisibleForRegister(!visibleForRegister)}/>

                    }
                    </div>
      
                <div className="w-full h-full flex flex-row">

                {stateRegister?.errors?.password &&
                  stateRegister?.errors?.password.map((b,index) => (
                    <h2 key={index} className=" w-fit h-fit  text-[12px] text-red-400 ring-[#cd3e2f] rounded-[10px] animate-fade-down animate-ease-in-out animate-normal animate-duration-[400ms]  ">
                      {b}
                    </h2>
                  ))}
                </div>

                <div className="relative w-full h-fit flex flex-col justify-center items-center gap-[10px]">
                  <button
                    type="submit"
                    className="relative w-[70%] h-[40px] text-[14px] leading-[14px] bg-[#191919] border-[#3a3a3a] border-[1px] rounded-[20px] hover:bg-opacity-90 hover:bg-red-400 transition-all hover:text-white "

                  >
                      <h2 className=" flex items-center justify-center text-[#757375] hover:text-white transition-all w-full h-full ">Kayıt Olun </h2>
                      </button>
                </div>
              </div>

              <div className="relative w-full h-fit flex flex-row justify-between items-center">
                <Button
                  className="relative w-fit h-fit text-white text-[16px] tracking-[-0.032px] leading-[38.4px] hover:text-red-400 transition-all  "

                  variant={null}
                  onClick={() => setLoginState(!loginState)}
                >
                  Hesabınız mı var Giriş Yapın
                </Button>
              </div>
            </form>
          </div>


      </div>
    </div>
  );
};

export default SigninComponent;
